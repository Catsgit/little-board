<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.littleboard.dao.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.littleboard.pojo.Project">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="owner" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="worker" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, description, type, create_time, owner, worker
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.littleboard.pojo.Project">
    insert into project (id, name, description, 
      type, create_time, owner, 
      worker)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, now(), #{owner,jdbcType=INTEGER},
      #{worker,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.littleboard.pojo.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="worker != null">
        worker,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="owner != null">
        #{owner,jdbcType=INTEGER},
      </if>
      <if test="worker != null">
        #{worker,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.littleboard.pojo.Project">
    update project
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="owner != null">
        owner = #{owner,jdbcType=INTEGER},
      </if>
      <if test="worker != null">
        worker = #{worker,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.littleboard.pojo.Project">
    update project
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      owner = #{owner,jdbcType=INTEGER},
      worker = #{worker,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAllProjectByOwnerId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Column_List"/>
    FROM project
    WHERE owner = #{ownerId}
  </select>
  <select id="selectByPrimaryKeyAndOwnerId" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM project
    WHERE id = #{id} AND owner = #{ownerId}
  </select>
  <delete id="deleteByPrimaryKeyAndOwnerId" parameterType="map">
    DELETE FROM project
    where id = #{id} AND owner = #{ownerId}
  </delete>
</mapper>